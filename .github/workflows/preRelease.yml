name: Create lib-ml Prerelease to GitHub Packages

on:
  push:
    branches:
      - main

permissions:
  contents: write
  packages: write

jobs:
  prerelease:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.9'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install gitpython

      - name: Determine latest release and calculate prerelease version
        id: versioning
        run: |
          git fetch --tags
          LATEST_TAG=$(git describe --tags --abbrev=0)
          LATEST_VERSION=${LATEST_TAG#v} # Remove 'v' prefix
          # Split version into major, minor, patch
          IFS='.' read -r MAJOR MINOR PATCH <<< "$LATEST_VERSION"
          # Increment patch version and append -pre
          NEW_VERSION="$MAJOR.$MINOR.$((PATCH + 1))-pre"
          echo "Latest release: $LATEST_VERSION"
          echo "New prerelease version: $NEW_VERSION"
          echo "PKG_VERSION=$NEW_VERSION" >> $GITHUB_OUTPUT
          echo "TAG_VERSION=v$NEW_VERSION" >> $GITHUB_OUTPUT

      - name: Inject version into package
        run: |
          sed -i "s/__version__ = .*/__version__ = \"${{ steps.versioning.outputs.PKG_VERSION }}\"/" src/lib_ml/__init__.py

      - name: Commit version update
        run: |
          git config user.name "GitHub Actions"
          git config user.email "actions@github.com"
          git add src/lib_ml/__init__.py
          git commit -m "Bump version to ${{ steps.versioning.outputs.PKG_VERSION }} for prerelease"
          git push

      - name: Create prerelease tag
        run: |
          git tag ${{ steps.versioning.outputs.TAG_VERSION }}
          git push origin ${{ steps.versioning.outputs.TAG_VERSION }}

      - name: Build wheel & sdist
        run: |
          python -m pip install --upgrade build
          python -m build
          ls -l dist/

      - name: Create GitHub Prerelease
        uses: softprops/action-gh-release@v2
        with:
          token: ${{ secrets.GH_PAT }}
          name: Prerelease ${{ steps.versioning.outputs.PKG_VERSION }}
          draft: false
          prerelease: true
          files: |
            dist/*.whl
            dist/*.tar.gz
          body: |
            **Python prerelease package published!**
            
            ```bash
            pip install --extra-index-url https://pkg.github.com/${{ github.repository_owner }} lib-ml==${{ steps.versioning.outputs.PKG_VERSION }}
            ```