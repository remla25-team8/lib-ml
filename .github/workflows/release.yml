name: Release lib-ml to GitHub Packages

on:
  push:
    tags:
      - 'v*'

permissions:
  contents: write
  packages: write

jobs:
  publish:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.9'

      - name: Extract version
        id: vars
        run: echo "PKG_VERSION=${GITHUB_REF#refs/tags/v}" >> $GITHUB_OUTPUT

      - name: Inject version into package
        run: |
          sed -i "s/__version__ = .*/__version__ = \"${{ steps.vars.outputs.PKG_VERSION }}\"/" src/lib_ml/__init__.py

      - name: Build wheel & sdist
        run: |
          python -m pip install --upgrade pip build
          python -m build
          ls -l dist/

      - name: Publish to GitHub Packages
        env:
          OWNER: ${{ github.repository_owner }}
          GH_TOKEN: ${{ secrets.GH_PAT }}
          USERNAME: ${{ github.actor }}
        run: |
          python -m pip install --upgrade twine
          UPLOAD_URL="https://api.github.com/orgs/${OWNER}/packages/pypi/upload"
          twine upload --repository-url "$UPLOAD_URL" \
                       -u "$USERNAME" -p "$GH_TOKEN" dist/*
      - name: Create GitHub Release
        uses: softprops/action-gh-release@v2
        with:
          token: ${{ secrets.GH_PAT }}
          name: Release ${{ github.ref_name }}
          draft: false
          prerelease: ${{ contains(github.ref_name, '-pre') }}
          files: |
            dist/*.whl
            dist/*.tar.gz
          body: |
            **Python package published!**
            
            ```bash
            pip install --extra-index-url https://pkg.github.com/${{ github.repository_owner }} lib-ml==${{ steps.vars.outputs.PKG_VERSION }}
            ```
